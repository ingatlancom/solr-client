name: CI
on: [push, pull_request]
jobs:
    tests:
        runs-on: ubuntu-18.04
        timeout-minutes: 5
        strategy:
            fail-fast: false
            matrix:
                php:
                    - '7.2'
                    - '7.4'
                include:
                    - php: '7.2'
                      deps: low
                    - php: '7.4'
                      coverage: pcov
        steps:
            - uses: actions/checkout@v2

            - name: Setup PHP
              uses: shivammathur/setup-php@v1
              with:
                  php-version: ${{ matrix.php }}
                  extensions: curl, mbstring
                  coverage: ${{ matrix.coverage }}

            - name: Get Composer Cache Directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache dependencies
              uses: actions/cache@v1
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-php${{ matrix.php }}
                  restore-keys: |
                      ${{ runner.os }}-composer-php${{ matrix.php }}
                      ${{ runner.os }}-composer

            - name: Cache build
              uses: actions/cache@v1
              with:
                  path: build
                  key: ${{ runner.os }}-build-php${{ matrix.php }}
                  restore-keys: |
                      ${{ runner.os }}-build-php${{ matrix.php }}
                      ${{ runner.os }}-build

            - name: Install Symfony Flex
              run: composer global require --prefer-dist --no-progress --no-suggest --ansi symfony/flex

            - name: Install dependencies
              run: |
                  if [[ '${{ matrix.deps }}' == 'low' ]]; then
                    export COMPOSER_OPS="--prefer-lowest"
                  fi
                  composer update --prefer-dist --no-progress --no-suggest --ansi $COMPOSER_OPS

            - name: Run test suit
              if: (!matrix.coverage)
              run: vendor/bin/phpunit --colors=always

            - name: Run test suit with coverage
              if: matrix.coverage == 'pcov'
              run: |
                  php -dpcov.enabled=1 vendor/bin/phpunit --coverage-html=build/coverage/coverage-html --coverage-xml=build/coverage/coverage-xml --coverage-clover=build/coverage/clover.xml --log-junit=build/coverage/junit.xml --coverage-text --colors=always

            - name: Run mutation tests
              if: matrix.coverage == 'pcov'
              run: |
                  [ -e build/bin/infection ] || curl -Ls https://github.com/infection/infection/releases/download/0.16.1/infection.phar -o build/bin/infection
                  php -dpcov.enabled=1 build/bin/infection --skip-initial-tests --coverage=build/coverage --min-msi=84 --min-covered-msi=86 --threads=$(nproc) --no-progress --show-mutations --ansi

            - name: Upload coverage results to Codecov
              uses: codecov/codecov-action@v1
              if: matrix.coverage == 'pcov' && success()
              with:
                  name: phpunit-php${{ matrix.php }}
                  flags: phpunit
                  token: ${{ secrets.CODECOV_TOKEN }}
                  fail_ci_if_error: true

    code-analysis:
        runs-on: ubuntu-18.04
        timeout-minutes: 5
        strategy:
            fail-fast: false
        steps:
            -   uses: actions/checkout@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v1
                with:
                    php-version: '7.4'
                    extensions: curl, mbstring

            -   name: Get Composer Cache Directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   name: Cache dependencies
                uses: actions/cache@v1
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-php${{ matrix.php }}
                    restore-keys: |
                        ${{ runner.os }}-composer-php${{ matrix.php }}
                        ${{ runner.os }}-composer

            -   name: Cache build
                uses: actions/cache@v1
                with:
                    path: build
                    key: ${{ runner.os }}-build-${{ hashFiles('.github/workflows/ci.yaml') }}

            -   name: Install Symfony Flex
                run: composer global require --prefer-dist --no-progress --no-suggest --ansi symfony/flex

            -   name: Validate composer.json and composer.lock
                run: composer validate

            -   name: Install dependencies
                run: composer update --prefer-dist --no-progress --no-suggest --ansi

            -   name: Download build dependencies
                run: |
                    [ -e build/bin/security-checker ] || curl -Ls https://get.sensiolabs.org/security-checker.phar -o build/bin/security-checker

            -   name: PHPStan
                run: php vendor/bin/phpstan analyse --no-progress --ansi
                if: success() || failure()

            -   name: psalm
                run: php vendor/bin/psalm.phar --show-info=false --threads=$(nproc) --stats --shepherd --output-format=github
                if: success() || failure()

            -   name: ECS
                run: php vendor/bin/ecs check --ansi
                if: success() || failure()

            -   name: Security check
                run: php build/bin/security-checker security:check
                if: success() || failure()

    integration-tests:
        runs-on: ubuntu-18.04
        timeout-minutes: 5
        strategy:
            fail-fast: false
        steps:
            -   uses: actions/checkout@v2

            -   name: Setup Docker
                run: |
                    cp $PWD/tests/Fixtures/sample.json $PWD/.docker/solr/data
                    docker-compose up -d solr

            -   name: Setup PHP
                uses: shivammathur/setup-php@v1
                with:
                    php-version: '7.4'
                    extensions: curl, mbstring

            -   name: Get Composer Cache Directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   name: Cache dependencies
                uses: actions/cache@v1
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-php${{ matrix.php }}
                    restore-keys: |
                        ${{ runner.os }}-composer-php${{ matrix.php }}
                        ${{ runner.os }}-composer

            -   name: Install Symfony Flex
                run: composer global require --prefer-dist --no-progress --no-suggest --ansi symfony/flex

            -   name: Install Dependencies
                run: composer update --prefer-dist --no-progress --no-suggest --ansi

            -   name: Setup Solr
                run: |
                    docker-compose exec -T solr wait-for-solr.sh
                    docker-compose exec -T solr solr create -V -c sample -d /sample
                    docker-compose exec -T solr post -c sample data/sample.json

            -   name: PHPUnit
                env:
                    SOLR_URL: http://localhost:8983/solr/sample/
                run: |
                    vendor/bin/phpunit --group integration --colors=always

            -   name: Stop Docker
                run: docker-compose down
